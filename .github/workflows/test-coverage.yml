name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: npm run typecheck
      
    - name: Run linting
      run: npm run lint
      
    - name: Run unit tests with coverage
      run: npm run test:coverage:ci
      
    - name: Run E2E tests
      run: npx playwright test
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./coverage/lcov.info
        
    - name: Archive coverage artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
        retention-days: 30
        
    - name: Coverage threshold check
      run: |
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        echo "Current coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 70" | bc -l) )); then
          echo "❌ Coverage below 70% threshold: $COVERAGE%"
          exit 1
        else
          echo "✅ Coverage meets 70% threshold: $COVERAGE%"
        fi

  coverage-report:
    needs: test-coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate coverage badge
      run: |
        npm run test:coverage:ci
        COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
        echo "COVERAGE_PERCENTAGE=$COVERAGE" >> $GITHUB_ENV
        
    - name: Update README with coverage badge
      run: |
        if ! grep -q "coverage" README.md 2>/dev/null; then
          echo "No README.md found or no coverage badge section"
        fi