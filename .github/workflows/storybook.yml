name: Build and Deploy Storybook

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'stories/**'
      - '.storybook/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'stories/**'
      - '.storybook/**'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v4
        
      - name: ðŸ“¦ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: ðŸ“± Install dependencies
        run: npm ci
        
      - name: ðŸ”§ Build Storybook
        run: npm run storybook:build
        
      - name: ðŸ“„ Generate Storybook stats
        run: |
          echo "# Storybook Build Stats" > storybook-static/STATS.md
          echo "**Build Date:** $(date)" >> storybook-static/STATS.md
          echo "**Commit:** ${{ github.sha }}" >> storybook-static/STATS.md
          echo "**Branch:** ${{ github.ref_name }}" >> storybook-static/STATS.md
          
      - name: ðŸ“¤ Upload Storybook artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: storybook-static
          
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: ðŸš€ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  pr-preview:
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: ðŸ’¬ Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸ“š Storybook Preview')
            );
            
            const commentBody = `ðŸ“š **Storybook Preview**
            
            A preview of your changes has been built! The Storybook documentation will be available once this PR is merged.
            
            **Build Information:**
            - **Commit:** \`${context.sha.substring(0, 7)}\`
            - **Branch:** \`${context.payload.pull_request.head.ref}\`
            - **Build Time:** ${new Date().toISOString()}
            
            ðŸ“– View the full documentation at the deployed Storybook URL after merge.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }