import{B as t}from"./chunk-DFiJEDgY.js";class l extends t{constructor(u={}){super("SubmenuModule",u),this.submenuToggles=null,this.currentOpenSubmenu=null,this.documentClickHandler=this.handleDocumentClick.bind(this)}async onInit(){this.submenuToggles=document.querySelectorAll("[data-submenu-toggle]"),this.submenuToggles&&this.setupSubmenuToggles(),document.addEventListener("click",this.documentClickHandler)}setupSubmenuToggles(){this.submenuToggles&&this.submenuToggles.forEach(u=>{this.addEventListener(u,"click",e=>{e.preventDefault(),e.stopPropagation(),this.toggleSubmenu(u)})})}toggleSubmenu(u){const e=u.closest(".has-submenu");if(!e)return;const n=e.classList.contains("submenu-open");this.currentOpenSubmenu&&this.currentOpenSubmenu!==e&&this.closeSubmenu(this.currentOpenSubmenu),n?this.closeSubmenu(e):this.openSubmenu(e)}openSubmenu(u){u.classList.add("submenu-open"),this.currentOpenSubmenu=u;const e=u.querySelector(".submenu");if(e){const n=e.querySelector(".submenu-inner");if(n){const s=n.scrollHeight;e.style.maxHeight=`${s}px`}}this.log("Submenu opened")}closeSubmenu(u){u.classList.remove("submenu-open"),this.currentOpenSubmenu===u&&(this.currentOpenSubmenu=null);const e=u.querySelector(".submenu");e&&(e.style.maxHeight="0px"),this.log("Submenu closed")}handleDocumentClick(u){!u.target.closest(".has-submenu")&&this.currentOpenSubmenu&&this.closeSubmenu(this.currentOpenSubmenu)}closeAllSubmenus(){document.querySelectorAll(".has-submenu.submenu-open").forEach(e=>{this.closeSubmenu(e)}),this.currentOpenSubmenu=null}getOpenSubmenu(){return this.currentOpenSubmenu}hasOpenSubmenu(){return this.currentOpenSubmenu!==null}onDestroy(){document.removeEventListener("click",this.documentClickHandler),this.currentOpenSubmenu=null}}export{l as S};
